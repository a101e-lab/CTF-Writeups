# -*- coding:utf-8 -*-
import os
import random
import string
import hashlib
import socketserver
from Crypto.Util.number import long_to_bytes


n=909467367699122020071016988650306999295228108976638769699035391871165765547800730173871546690865275123375066230171521311068819816852640125745292539541259006023609504769135551654529045891894185101263480691408339167146959806826342796151867522273018753414683125578415962666829770904166690498846087399777025030862122796483743577214854248422262763202974262015130017066825754008160259189414818697567284326444565265735329976239935592453543076795651573576794776003238789860869381589213987112412732442793109900427324085928201408085720252507826509949584097216821241278182597257299885172782505117521436358744947983811939554943145617958259867137670519879871430621545154465019553001205911580515698810275961361004704605451591223643427530911392689056988136336912424730785373902092658701108834786609423741166892942322112744091173801215997979197781791157780385712374075574951133435122784372704793303399699730638707098947178219189508884581830248871075957102690166621382729933821529281361101591281902812061185346676660877303782149165897420682724683205662866974137418732285231256810541807361468193401184858075051706155601176563558866315093106261534227649361408522136583934234512184301782185760219449297423394506961283209453334215176208906015567865682661
fake_p
c=694500789519839583373480124753870609796624184368847740052659890684952282469412685843793893336588959688292535565388961237054382061607809034620598317779687541764120119851622500197513641485700221545824097256986828990721130988465432457926804939623885349284941907683524562179105951076405178191916974212394857571647273209891325684133975190612454243345915122493599006273649156588911638621279271660577286076492174133379924878816759449537816258877983535822071467357826352013991371273144147958254806851665648862909470014188217381547444474766611515043375595448634817257201321537710925281810846187991415244304258902323932755496219900194257710795367213151869032406828586461628113793387618900293473170817978068346842472541499877290335671510770413540109295368927586613167172537907784632075379648806105818669008103026164730513033786875076959900405998112656279798642754984874654321483935047414576483030634418889375971016788408747123075626184286939742532706576269950026208168650867226593584227608482405783125152467929531339747039920420671850985997912834217484356948372454631601487864570640693252550030654681522447089126289751692094672022733644147229926742656125552935762042624836326359406490008032106080800094693108856102201450516929541344003829402493
e = 0x10001


fake_p1=list(fake_p[:1024])
fake_p2=list(fake_p[1024:])
p=0
q=0
for i, x in enumerate(fake_p1):
    if x == '0':
        p1=fake_p1[:i]+['1']+fake_p1[i+1:]
        p2=fake_p2
        p=int(''.join(p1)+''.join(p2),2)   
        if n%p==0:
            q=n//p
            if p.bit_length() == 2048 and q.bit_length() == 2048 and n.bit_length() == 4096:
                print("Get p q!\n")
                break
            else:
                print("bad format1!")
        else:         
            for j,y in enumerate(fake_p2):
                if y== '1':
                    p2=fake_p2[:j]+['0']+fake_p2[j+1:]
                    p=int(''.join(p1)+''.join(p2),2)   
                    if n%p==0:
                        q=n//p
                        if p.bit_length() == 2048 and q.bit_length() == 2048 and n.bit_length() == 4096:
                            print("Get p q!\n")
                            break
                        else:
                            print("bad format2!")
print(p)
print(q)
phi_n = (p - 1) * (q - 1)
print("phi_n:")
print(phi_n)
d = pow(e, -1, phi_n)
m = pow(c, d, n)
print(long_to_bytes(m))
